{
  "uid" : "5f39b3d3c4ccafb",
  "name" : "test_create_new_pet_check_status_code",
  "fullName" : "tests.test_kate.test_post.TestPostPets#test_create_new_pet_check_status_code",
  "historyId" : "fb20037532c8524f5d5ad8aa955c3f69",
  "time" : {
    "start" : 1698884953099,
    "stop" : 1698884953359,
    "duration" : 260
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Status_code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "self = <tests.test_kate.test_post.TestPostPets object at 0x7f4344731110>\n\n    @allure.title(\"test_create_new_pet_check_status_code\")\n    def test_create_new_pet_check_status_code(self):\n        url = self.url.URL_PET\n        j = file_read('data/data_kate/body_new_pet.json')\n        response = MyRequests().post(url, data=j)\n>       assert response.status_code == 200, \"Status_code is not 200\"\nE       AssertionError: Status_code is not 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/test_kate/test_post.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1698884946801,
      "stop" : 1698884946819,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Status_code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "self = <tests.test_kate.test_post.TestPostPets object at 0x7f4344731110>\n\n    @allure.title(\"test_create_new_pet_check_status_code\")\n    def test_create_new_pet_check_status_code(self):\n        url = self.url.URL_PET\n        j = file_read('data/data_kate/body_new_pet.json')\n        response = MyRequests().post(url, data=j)\n>       assert response.status_code == 200, \"Status_code is not 200\"\nE       AssertionError: Status_code is not 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/test_kate/test_post.py:16: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b25e616921ec5be7",
      "name" : "log",
      "source" : "b25e616921ec5be7.txt",
      "type" : "text/plain",
      "size" : 291
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test post pet"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_kate"
  }, {
    "name" : "suite",
    "value" : "test_post"
  }, {
    "name" : "subSuite",
    "value" : "TestPostPets"
  }, {
    "name" : "host",
    "value" : "fv-az409-651"
  }, {
    "name" : "thread",
    "value" : "2324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_kate.test_post"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5f39b3d3c4ccafb.json",
  "parameterValues" : [ ]
}