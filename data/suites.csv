"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Nov 12 00:32:47 GMT 2023","Sun Nov 12 00:32:47 GMT 2023","365","tests.test_vera","test_pets_post","TestPostAddPet","","","Create pet > Expected pet values in response","
        The test checks values in json response for the created pet
        :param pet_data
        :return: valid pet values in response
        "
"passed","Sun Nov 12 00:32:14 GMT 2023","Sun Nov 12 00:32:15 GMT 2023","356","tests.test_kate","test_put_pets","TestUpdatePets","","","test_update_pet",""
"passed","Sun Nov 12 00:32:07 GMT 2023","Sun Nov 12 00:32:07 GMT 2023","376","tests.test_galya","test_example","","","","test_get_purchase_by_id",""
"passed","Sun Nov 12 00:32:41 GMT 2023","Sun Nov 12 00:32:42 GMT 2023","734","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by ID > valid ID > status code is 200","
        This test to get pet info by ID and ensure status code is 200
        :param pet_data: pet data
        :return: status code OK 200
        "
"passed","Sun Nov 12 00:32:41 GMT 2023","Sun Nov 12 00:32:41 GMT 2023","366","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by invalid status > status code 400","
        The test checks if the response status code is 400
        :param for status: ""invalid_status""
        :return: status code is BAD_REQUEST 400 "
"passed","Sun Nov 12 00:32:35 GMT 2023","Sun Nov 12 00:32:36 GMT 2023","733","tests.test_tatiana.test_users","test_user_get","Test_users_get","","","test_get_users_by_username_positive",""
"passed","Sun Nov 12 00:32:35 GMT 2023","Sun Nov 12 00:32:35 GMT 2023","365","tests.test_tatiana.test_users","test_user_delate","Test_user_delate","","","test_delate_users_by_non_existent_username_negative",""
"passed","Sun Nov 12 00:32:11 GMT 2023","Sun Nov 12 00:32:11 GMT 2023","429","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_status",""
"passed","Sun Nov 12 00:32:39 GMT 2023","Sun Nov 12 00:32:39 GMT 2023","369","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > status code 200","
        This test checks availability of pets by status and checks the status code of the response
        :param for status: ""available"", ""pending"",  ""sold""
        :return: status code OK 200
        "
"passed","Sun Nov 12 00:32:11 GMT 2023","Sun Nov 12 00:32:12 GMT 2023","363","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_status",""
"passed","Sun Nov 12 00:32:09 GMT 2023","Sun Nov 12 00:32:09 GMT 2023","361","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_is_json",""
"passed","Sun Nov 12 00:32:45 GMT 2023","Sun Nov 12 00:32:45 GMT 2023","364","tests.test_vera","test_pets_post","TestPostAddPet","","","Add a new pet > status code 200","The test checks status code is 200 for the created pet
        :param pet_id
        :return: status code OK 200 "
"passed","Sun Nov 12 00:32:34 GMT 2023","Sun Nov 12 00:32:35 GMT 2023","366","tests.test_tatiana.test_users","test_user_delate","Test_user_delate","","","test_delate_users_by_empty_username_negative",""
"passed","Sun Nov 12 00:32:16 GMT 2023","Sun Nov 12 00:32:16 GMT 2023","357","tests.test_kate","test_users","TestCreateUsers","","","test_create_user_check_message",""
"passed","Sun Nov 12 00:32:08 GMT 2023","Sun Nov 12 00:32:08 GMT 2023","376","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_is_json",""
"passed","Sun Nov 12 00:32:17 GMT 2023","Sun Nov 12 00:32:18 GMT 2023","361","tests.test_kate","test_users","TestCreateUsers","","","test_create_user_is_present_in_databas",""
"passed","Sun Nov 12 00:32:36 GMT 2023","Sun Nov 12 00:32:36 GMT 2023","365","tests.test_tatiana.test_users","test_user_get","Test_users_get","","","test_get_users_by_non_existent_username_negative",""
"passed","Sun Nov 12 00:32:21 GMT 2023","Sun Nov 12 00:32:21 GMT 2023","364","tests.test_kate","test_users","TestCreateUsers","","","test_get_user_check_keys",""
"passed","Sun Nov 12 00:32:12 GMT 2023","Sun Nov 12 00:32:12 GMT 2023","364","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_keys",""
"passed","Sun Nov 12 00:32:29 GMT 2023","Sun Nov 12 00:32:29 GMT 2023","367","tests.test_nata","test_pets","TestPet","","","get_finds_pets_by_status",""
"passed","Sun Nov 12 00:32:41 GMT 2023","Sun Nov 12 00:32:41 GMT 2023","372","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by invalid status > Not Found error message","
        The test checks if the response error message is ""Not Found""
        :param for status: ""invalid_status""
        :return:  'message': 'HTTP 404 Not Found' "
"broken","Sun Nov 12 00:32:05 GMT 2023","Sun Nov 12 00:32:05 GMT 2023","389","tests.test_denis.test_store","test_create_store","TestCreateStore","","","Create store with valid data has status code 200","
        This test checks if response has status code 200
        "
"passed","Sun Nov 12 00:32:46 GMT 2023","Sun Nov 12 00:32:47 GMT 2023","356","tests.test_vera","test_pets_post","TestPostAddPet","","","Add a new pet > Expected pet name in response","
        The test checks pet's name in json response for the created pet
        :param pet_data
        :return: pet's name in response
        "
"passed","Sun Nov 12 00:32:05 GMT 2023","Sun Nov 12 00:32:06 GMT 2023","375","tests.test_galya","test_example","","","","test_get_find_pets_by_status_sold",""
"passed","Sun Nov 12 00:32:32 GMT 2023","Sun Nov 12 00:32:32 GMT 2023","513","tests.test_olena","test_get_pets","","","","test_get_pets_by_status_available",""
"passed","Sun Nov 12 00:32:10 GMT 2023","Sun Nov 12 00:32:10 GMT 2023","454","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_by_status",""
"passed","Sun Nov 12 00:32:12 GMT 2023","Sun Nov 12 00:32:13 GMT 2023","358","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_keys",""
"passed","Sun Nov 12 00:32:24 GMT 2023","Sun Nov 12 00:32:25 GMT 2023","736","tests.test_kate","test_users","TestCreateUsers","","","test_update_user_check_value",""
"passed","Sun Nov 12 00:32:29 GMT 2023","Sun Nov 12 00:32:29 GMT 2023","507","tests.test_nata","test_pets","TestPet","","","get_finds_pets_by_status",""
"passed","Sun Nov 12 00:32:07 GMT 2023","Sun Nov 12 00:32:08 GMT 2023","378","tests.test_kate","test_delete_pets","TestDeletePets","","","test_delete_pet_has_text",""
"passed","Sun Nov 12 00:32:38 GMT 2023","Sun Nov 12 00:32:39 GMT 2023","367","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > status code 200","
        This test checks availability of pets by status and checks the status code of the response
        :param for status: ""available"", ""pending"",  ""sold""
        :return: status code OK 200
        "
"passed","Sun Nov 12 00:32:08 GMT 2023","Sun Nov 12 00:32:08 GMT 2023","362","tests.test_kate","test_delete_pets","TestDeletePets","","","test_delete_deleted_pet",""
"passed","Sun Nov 12 00:32:07 GMT 2023","Sun Nov 12 00:32:07 GMT 2023","392","tests.test_kate","test_delete_pets","TestDeletePets","","","test_delete_pet",""
"passed","Sun Nov 12 00:32:08 GMT 2023","Sun Nov 12 00:32:09 GMT 2023","375","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_is_json",""
"passed","Sun Nov 12 00:32:34 GMT 2023","Sun Nov 12 00:32:34 GMT 2023","736","tests.test_tatiana.test_users","test_user_delate","Test_user_delate","","","test_delate_user_by_user_name_positive",""
"passed","Sun Nov 12 00:32:28 GMT 2023","Sun Nov 12 00:32:29 GMT 2023","439","tests.test_nata","test_pets","TestPet","","","get_finds_pets_by_status",""
"passed","Sun Nov 12 00:32:06 GMT 2023","Sun Nov 12 00:32:06 GMT 2023","364","tests.test_galya","test_example","","","","test_get_find_pets_by_id",""
"passed","Sun Nov 12 00:32:03 GMT 2023","Sun Nov 12 00:32:04 GMT 2023","447","tests.test_alena","test_pets","","","","test_get_pets_by_status_pending",""
"passed","Sun Nov 12 00:32:19 GMT 2023","Sun Nov 12 00:32:20 GMT 2023","367","tests.test_kate","test_users","TestCreateUsers","","","test_get_user_check_is_json",""
"passed","Sun Nov 12 00:32:23 GMT 2023","Sun Nov 12 00:32:23 GMT 2023","368","tests.test_kate","test_users","TestCreateUsers","","","test_update_user_check_message",""
"passed","Sun Nov 12 00:32:33 GMT 2023","Sun Nov 12 00:32:33 GMT 2023","439","tests.test_olga_r","test_example","","","","test_get_by_status_pending",""
"passed","Sun Nov 12 00:32:40 GMT 2023","Sun Nov 12 00:32:41 GMT 2023","368","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > response is JSON format","
        The test checks if the response content type is JSON
        :param for status: ""available"", ""pending"",  ""sold""
        :return: JSON format
        "
"passed","Sun Nov 12 00:32:39 GMT 2023","Sun Nov 12 00:32:40 GMT 2023","371","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > status code 200","
        This test checks availability of pets by status and checks the status code of the response
        :param for status: ""available"", ""pending"",  ""sold""
        :return: status code OK 200
        "
"passed","Sun Nov 12 00:32:04 GMT 2023","Sun Nov 12 00:32:04 GMT 2023","376","tests.test_alena","test_pets","","","","test_get_pets_by_status_sold",""
"passed","Sun Nov 12 00:32:32 GMT 2023","Sun Nov 12 00:32:33 GMT 2023","510","tests.test_olga_r","test_example","","","","test_get_by_status_available",""
"passed","Sun Nov 12 00:32:04 GMT 2023","Sun Nov 12 00:32:05 GMT 2023","380","tests.test_denis","test_example","TestGetPets","","","test_example",""
"passed","Sun Nov 12 00:32:45 GMT 2023","Sun Nov 12 00:32:46 GMT 2023","365","tests.test_vera","test_pets_post","TestPostAddPet","","","Add a new pet > Response is in json format","
        The test checks response is in json format for the created pet
        :param schema, headers
        :return: response is in json format
        "
"broken","Sun Nov 12 00:32:05 GMT 2023","Sun Nov 12 00:32:05 GMT 2023","1","tests.test_denis.test_pets","test_create_pets","TestCreateStore","","","Create pet with valid data has status code 200","
        This test checks if response has status code 200
        "
"passed","Sun Nov 12 00:32:36 GMT 2023","Sun Nov 12 00:32:37 GMT 2023","356","tests.test_tatiana.test_users","test_user_get","Test_users_get","","","test_get_users_by_empty_username__negative",""
"passed","Sun Nov 12 00:32:31 GMT 2023","Sun Nov 12 00:32:32 GMT 2023","365","tests.test_nata","test_pets","TestPet","","","put_update_an_existing_pet",""
"passed","Sun Nov 12 00:32:13 GMT 2023","Sun Nov 12 00:32:14 GMT 2023","535","tests.test_kate","test_post","TestPostPets","","","test_create_new_pet",""
"skipped","Sun Nov 12 00:32:31 GMT 2023","Sun Nov 12 00:32:31 GMT 2023","0","tests.test_nata","test_pets","TestPet","","","post_uploads_an_image_pet",""
"passed","Sun Nov 12 00:32:42 GMT 2023","Sun Nov 12 00:32:42 GMT 2023","367","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by ID > non existing ID > status code is 404","
        This test to get pet info by non-existing ID and ensure status code is 404
        :param: invalid pet_id = -1
        :return: status code NOT FOUND 404
        "
"passed","Sun Nov 12 00:32:18 GMT 2023","Sun Nov 12 00:32:19 GMT 2023","358","tests.test_kate","test_users","TestCreateUsers","","","test_get_user_check_status_code",""
"passed","Sun Nov 12 00:32:37 GMT 2023","Sun Nov 12 00:32:38 GMT 2023","1460","tests.test_tatiana.test_users","test_user_put","Test_users_put","","","test_update_users_positive",""
"passed","Sun Nov 12 00:32:43 GMT 2023","Sun Nov 12 00:32:44 GMT 2023","1101","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by ID > deleted pet > status code is 404","
        This test to get pet info by ID and ensure status code is 404 after deleting the pet
        :param pet_data: pets data
        :return: status code NOT FOUND 404
        "
"passed","Sun Nov 12 00:32:13 GMT 2023","Sun Nov 12 00:32:13 GMT 2023","368","tests.test_kate","test_post","TestPostPets","","","test_create_new_pet_check_status_code",""
"passed","Sun Nov 12 00:32:06 GMT 2023","Sun Nov 12 00:32:07 GMT 2023","363","tests.test_galya","test_example","","","","test_get_user_by_user_name",""
"passed","Sun Nov 12 00:32:09 GMT 2023","Sun Nov 12 00:32:10 GMT 2023","502","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_by_status",""
"passed","Sun Nov 12 00:32:13 GMT 2023","Sun Nov 12 00:32:13 GMT 2023","370","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_keys",""
"passed","Sun Nov 12 00:32:28 GMT 2023","Sun Nov 12 00:32:28 GMT 2023","370","tests.test_masha","test_get_pets","","","","test_get_pets_by_status_error_adress",""
"passed","Sun Nov 12 00:32:27 GMT 2023","Sun Nov 12 00:32:27 GMT 2023","437","tests.test_masha","test_get_pets","","","","test_get_pets_by_status_pending",""
"passed","Sun Nov 12 00:32:26 GMT 2023","Sun Nov 12 00:32:27 GMT 2023","507","tests.test_masha","test_get_pets","","","","test_get_pets_by_status_available",""
"passed","Sun Nov 12 00:32:33 GMT 2023","Sun Nov 12 00:32:34 GMT 2023","507","tests.test_steve","test_get_ex","","","","test_get_find_by_status",""
"passed","Sun Nov 12 00:32:38 GMT 2023","Sun Nov 12 00:32:38 GMT 2023","362","tests.test_tatiana.test_users","test_user_put","Test_users_put","","","test_update_users_negative",""
"passed","Sun Nov 12 00:32:22 GMT 2023","Sun Nov 12 00:32:22 GMT 2023","366","tests.test_kate","test_users","TestCreateUsers","","","test_update_user_check_status_code",""
"passed","Sun Nov 12 00:32:11 GMT 2023","Sun Nov 12 00:32:11 GMT 2023","509","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_check_status",""
"passed","Sun Nov 12 00:32:15 GMT 2023","Sun Nov 12 00:32:15 GMT 2023","381","tests.test_kate","test_users","TestCreateUsers","","","test_create_user_check_status_code",""
"passed","Sun Nov 12 00:32:27 GMT 2023","Sun Nov 12 00:32:28 GMT 2023","368","tests.test_masha","test_get_pets","","","","test_get_pets_by_status_sold",""
"passed","Sun Nov 12 00:32:10 GMT 2023","Sun Nov 12 00:32:11 GMT 2023","371","tests.test_kate","test_get_pets","TestsGetPets","","","test_get_pets_by_status",""
"passed","Sun Nov 12 00:32:44 GMT 2023","Sun Nov 12 00:32:45 GMT 2023","1104","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by ID > deleted pet > Pet not found error message","
        This test to get pet info by ID and ensure ""Pet not found"" error message after deleting the pet
        :param:  pet_data
        :return: ""Pet not found""
        "
"passed","Sun Nov 12 00:32:05 GMT 2023","Sun Nov 12 00:32:05 GMT 2023","463","tests.test_galya","test_example","","","","test_get_find_pets_by_status_pending",""
"passed","Sun Nov 12 00:32:40 GMT 2023","Sun Nov 12 00:32:40 GMT 2023","373","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > response is JSON format","
        The test checks if the response content type is JSON
        :param for status: ""available"", ""pending"",  ""sold""
        :return: JSON format
        "
"passed","Sun Nov 12 00:32:25 GMT 2023","Sun Nov 12 00:32:26 GMT 2023","735","tests.test_kate","test_users","TestCreateUsers","","","test_check_update_username_and_id",""
"passed","Sun Nov 12 00:32:14 GMT 2023","Sun Nov 12 00:32:14 GMT 2023","363","tests.test_kate","test_put_pets","TestUpdatePets","","","test_update_pet_check_status_code",""
"passed","Sun Nov 12 00:32:46 GMT 2023","Sun Nov 12 00:32:46 GMT 2023","361","tests.test_vera","test_pets_post","TestPostAddPet","","","Add a new pet > Expected pet keys in response","
        The test checks pet keys in json response for the created pet
        :param pet_data
        :return: pet keys in response
        "
"passed","Sun Nov 12 00:32:42 GMT 2023","Sun Nov 12 00:32:43 GMT 2023","369","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by ID > non existing ID > error messages is 'Pet not found'","
        This test validates error message in the response for retrieving pet information by non-existing ID
        :param : invalid pet_id = -1
        :return: test for error message
        "
"passed","Sun Nov 12 00:32:30 GMT 2023","Sun Nov 12 00:32:30 GMT 2023","1","tests.test_nata","test_pets","TestPet","","","post_add_a_new_pet_to_the_store",""
"passed","Sun Nov 12 00:32:30 GMT 2023","Sun Nov 12 00:32:31 GMT 2023","376","tests.test_nata","test_pets","TestPet","","","get_pet_by_id",""
"passed","Sun Nov 12 00:32:40 GMT 2023","Sun Nov 12 00:32:40 GMT 2023","363","tests.test_vera","test_pets_get","TestGetPet","","","Get pet by status > response is JSON format","
        The test checks if the response content type is JSON
        :param for status: ""available"", ""pending"",  ""sold""
        :return: JSON format
        "
